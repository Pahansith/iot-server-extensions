<%
/*
 * Copyright (c) WSO2 Inc. (http://wso2.com) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var caramel;
require('/modules/store.js').exec(function (ctx) {
	var log = new Log("device_listing.jag");
	caramel = require('caramel');
	var app = require('rxt').app;
	var ui = require('rxt').ui;
	var page = ui.buildPage(ctx.session, ctx.request);

	var groupId = request.getParameter("groupId");
	var allDevices = [];

	var groupModule = require("../modules/group.js").groupModule;
	if (groupId && groupId != "0") {
		var group = groupModule.getDevices(groupId).data;
		log.info(group);
		if (group) {
			allDevices.push(group.group);
		}
	} else {
		var deviceModule = require("../modules/device.js").deviceModule;
		var ownDevices = deviceModule.getDevices().data;

		var user_groups = groupModule.getGroups().data;

		for (var g in user_groups) {
			log.info(user_groups[g]);
			var deviceInGroup = user_groups[g].devices;
			allDevices.push(user_groups[g]);
			for (var od in ownDevices) {
				for (var gd in deviceInGroup) {
					if (deviceInGroup[gd].deviceIdentifier == ownDevices[od].deviceIdentifier) {
						ownDevices[od].deviceIdentifier = -1;
					}
				}
			}
			if (deviceInGroup && deviceInGroup.length == 0){
				delete user_groups[g]["devices"];
			}
		}
		var unsharedDevices = [];
		for (var od in ownDevices) {
			if (ownDevices[od].deviceIdentifier != -1) {
				unsharedDevices.push(ownDevices[od]);
			}
		}
		allDevices.push({id: 0, devices: unsharedDevices});
	}
	log.info(allDevices);
	page.groups = allDevices;
	page.operations = true;
	var appManager = app.createUserAppManager(session);
	var output = appManager.render([], page);
	caramel.render(output);
}, request, response, session); %>